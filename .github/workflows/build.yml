on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Ubuntu build dependencies
        run: |
          sudo ./deps.sh

      - name: Run build script
        run: |
          ./build.sh

      - name: Upload x86_64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-linux-musl-toolchain.tar.xz
          path: x86_64-linux-musl-toolchain.tar.xz
          retention-days: 1

  buildarm:
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Ubuntu build dependencies
        run: |
          sudo ./deps.sh

      - name: Run build script
        run: |
          ./build.sh

      - name: Upload aarch64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-linux-musl-toolchain.tar.xz
          path: aarch64-linux-musl-toolchain.tar.xz
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - buildarm

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-toolchain.tar.xz
          path: .

      - name: Download aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: aarch64-linux-musl-toolchain.tar.xz
          path: .

      - name: Create release with both artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="nightly-$(date +%Y%m%d)"
          if gh release view "$tag" &>/dev/null; then
            echo "Release $tag already exists. Not creating new release." >&2
            exit 0
          fi
          gh release create "$tag" --title "$tag" {x86_64,aarch64}-linux-musl-toolchain.tar.xz

      - name: Clean up artifact cache after release
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            x86_64-linux-musl-toolchain.tar.xz
            aarch64-linux-musl-toolchain.tar.xz
          failOnError: false
